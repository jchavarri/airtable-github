// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var DecodeError = Caml_exceptions.create("GitHub-AirtableGithub.DecodeError");

function action(action$1) {
  switch (action$1) {
    case "assigned" : 
        return /* Assigned */0;
    case "closed" : 
        return /* Closed */8;
    case "demilestoned" : 
        return /* Demilestoned */7;
    case "edited" : 
        return /* Edited */5;
    case "labeled" : 
        return /* Labeled */2;
    case "milestoned" : 
        return /* Milestoned */6;
    case "opened" : 
        return /* Opened */4;
    case "reopened" : 
        return /* Reopened */9;
    case "unassigned" : 
        return /* Unassigned */1;
    case "unlabeled" : 
        return /* Unlabeled */3;
    default:
      throw [
            DecodeError,
            "Expected valid 'action' value, got " + action$1
          ];
  }
}

function issue(json) {
  return {
          url: Json_decode.field("url", Json_decode.string, json),
          number: Json_decode.field("number", Json_decode.$$int, json),
          title: Json_decode.field("title", Json_decode.string, json)
        };
}

exports.DecodeError = DecodeError;
exports.action = action;
exports.issue = issue;
/* No side effect */
